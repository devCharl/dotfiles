# unlock LC_* to remove the WARNING about the LC_*
export LC_LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Path to your oh-my-zsh installation.

export ZSH="/Users/charlesyin/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="ys"  #"half-life"  # robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git z zsh-syntax-highlighting zsh-autosuggestions)

source $ZSH/oh-my-zsh.sh

# User configuration

export TERM=xterm-256color

prompt_context(){} # hide username+hostname
# hide hostname but display username
# prompt_context(){
#	if [["$USER" != "DEFAULT_USER" || -n "$SSH_CLIENT" ]]; then
#		prompt_segment black defult "%(!.%F{yellow}%.}).$USER"
#	fi
# }

# PROMPT=$'%{$purple%}%n%{$reset_color%} in %{$limegreen%}%~%{$reset_color%}$(ruby_prompt_info " with%{$fg[red]%} " v g "%{$reset_color%}")$vcs_info_msg_0_%{$orange%}%{$reset_color%} at %{$hotpink%}%* %{$orange%}Î»%{$reset_color%} '

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Configurations for proxy
function proxy_on(){
	export ALL_PROXY=socks5://127.0.0.1:1086
}

function proxy_off(){
	unset ALL_PROXY
}

# Alias
## Settings for trash-cli
alias rm=trash-put
alias rmt=trash-empty
alias rsrm=trash-restore

## Settings for Mac
alias ssh='TERM=xterm-256color ssh'
alias zshconfig='vim ~/.zshrc'
alias source_zsh='source ~/.zshrc'
alias tmuxconfig='vim ~/.tmux.conf'
alias vimconfig='vim ~/.vimrc'
alias reset_launchpad='defaults write com.apple.dock springboard-columns -int 8; defaults write com.apple.dock springboard-rows -int 7; defaults write com.apple.dock ResetLaunchPad -bool TRUE; killall Dock'
alias killtmux='pkill -9 tmux'
alias mkcd='foo(){ mkdir -p "$1"; cd "$1" }; foo'
alias flush='sudo killall -HUP mDNSResponder'
alias c=clear
export PATH=/Users/charlesyin/Library/Python/2.7/bin:/Users/charlesyin/Library/Python/3.7/bin:$PATH

## Settings for Other Softwares in Shell
alias v='vim'
alias sv="sudo vim"
alias scode='sudo code'
alias htop="sudo htop"
alias pyoutube-dl="youtube-dl --proxy socks5://127.0.0.1:1086 -f bestvideo+bestaudio"
alias bwg="ssh root@104.194.80.114 -p 29830"
alias supermode='sudo nvram boot-args="serverperfmode=1 $(nvram boot-args 2>/dev/null | cut -f 2-)"'
alias normalmode="sudo nvram boot-args="$(nvram boot-args 2>/dev/null | sed -e $'s/boot-args\t//;s/serverperfmode=1//')""
alias checkmode="nvram boot-args"

## Settings for Homebrew
export HOMEBREW_NO_AUTO_UPDATE=true

## development for python
alias py2=python2
alias py3=python3
alias ipy3=ipython3
alias ipy2=ipython2

# Development
## NVM Settings
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

## Blog 
export BLOG_ROOT=/Users/charlesyin/Documents/Personl_Blog/blog

## Python Dev
export PATH=$HOME/.pyenv/bin:$HOME/.pyenv/shim:$PATH
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

## Settings for ic4c
# icu4c is keg-only, which means it was not symlinked into /usr/local,
# because macOS provides libicucore.dylib (but nothing else).
#echo 'export PATH="/usr/local/opt/icu4c/bin:$PATH"' >> ~/.zshrc
#echo 'export PATH="/usr/local/opt/icu4c/sbin:$PATH"' >> ~/.zshrc
export LDFLAGS="-L/usr/local/opt/icu4c/lib"
export CPPFLAGS="-I/usr/local/opt/icu4c/include"
export PKG_CONFIG_PATH="/usr/local/opt/icu4c/lib/pkgconfig"
export PATH="/usr/local/opt/icu4c/bin:$PATH"

## Settings for gnu-getopt
# gnu-getopt is keg-only, which means it was not symlinked into /usr/local,
# because macOS already provides this software and installing another version in
# parallel can cause all kinds of trouble.
#echo 'export PATH="/usr/local/opt/gnu-getopt/bin:$PATH"' >> ~/.zshrc
export PATH="/usr/local/opt/gnu-getopt/bin:$PATH"

## Settings for tesseract
# This formula contains only the "eng", "osd", and "snum" language data files.
# If you need all the other supported languages, `brew install tesseract-lang`.


## Settings for gpg

## ==> libffi
## libffi is keg-only, which means it was not symlinked into /usr/local,
## because some formulae require a newer version of libffi.
## 
## For compilers to find libffi you may need to set:
##   export LDFLAGS="-L/usr/local/opt/libffi/lib"
## 
## ==> unbound
## To have launchd start unbound now and restart at startup:
##   sudo brew services start unbound
#

# Keys
## zsh-autosuggestions
# bindkey ',' autosuggest-accept

##sqlite is keg-only, which means it was not symlinked into /usr/local,
##because macOS provides an older sqlite3.

##If you need to have sqlite first in your PATH run:
##  echo 'export PATH="/usr/local/opt/sqlite/bin:$PATH"' >> ~/.zshrc

##For compilers to find sqlite you may need to set:
##  export LDFLAGS="-L/usr/local/opt/sqlite/lib"
##  export CPPFLAGS="-I/usr/local/opt/sqlite/include"

##For pkg-config to find sqlite you may need to set:
##  export PKG_CONFIG_PATH="/usr/local/opt/sqlite/lib/pkgconfig"

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

